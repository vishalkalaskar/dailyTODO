1. Find the second highest salary from the "Employee" table:
SELECT DISTINCT salary FROM Employee  ORDER BY salary DESC LIMIT 1 OFFSET 1;


2. Find all duplicate records in a table:
SELECT column1, column2, COUNT(*) FROM TableName GROUP BY column1, column2 HAVING COUNT(*) > 1;

3. Fetch the nth highest salary from the "Employee" table:
SELECT DISTINCT salary FROM Employee ORDER BY salary DESC LIMIT 1 OFFSET (n-1);


4. Display the department-wise highest salary of employees:
SELECT department, MAX(salary) AS highest_salary FROM Employee GROUP BY department;

5. Find employees who earn more than the average salary in their department:
SELECT e1.* FROM Employee e1 JOIN (
    SELECT department, AVG(salary) AS avg_salary 
    FROM Employee 
    GROUP BY department
) e2 ON e1.department = e2.department WHERE e1.salary > e2.avg_salary;


6. Fetch common records between two tables:
SELECT t1.* FROM Table1 t1 JOIN Table2 t2 ON t1.common_column = t2.common_column;

7. Fetch employees who have not received any bonuses:
SELECT e.* FROM Employee e LEFT JOIN Bonus b ON e.emp_id = b.emp_id WHERE b.bonus IS NULL;

8. Calculate the cumulative sum of a column in a table:
SELECT emp_id, salary, SUM(salary) OVER (ORDER BY emp_id) AS cumulative_salary FROM Employee;

9. Fetch the top 3 highest salaries department-wise:
SELECT department, salary 
FROM (
    SELECT department, salary, 
           RANK() OVER (PARTITION BY department ORDER BY salary DESC) AS rnk
    FROM Employee
) ranked 
WHERE rnk <= 3;

10. Count the number of employees in each department:
SELECT department, COUNT(*) AS employee_count FROM Employee GROUP BY department;

11.Get employee earning more than the hgihest-paid HR Employee
SELECT e1.emp_name, e1.salary 
FROM Employee e1 
WHERE e1.salary > (
    SELECT MAX(e.salary) 
    FROM Employee e 
    JOIN Department d ON e.department = d.department_id 
    WHERE d.department_name = 'HR'
);

12.list employee who do not earn the hgiest salary in their departmen.
SELECT e.emp_id, e.emp_name, e.department 
FROM Employee e 
WHERE e.salary NOT IN (
    SELECT MAX(e1.salary) 
    FROM Employee e1 
    GROUP BY e1.department
);
13.find employee earning above their department average salary
SELECT e.emp_id, e.emp_name, e.department, e.salary
FROM Employee e
JOIN (
    SELECT department, AVG(salary) AS avg_salary
    FROM Employee
    GROUP BY department
) dept_avg 
ON e.department = dept_avg.department
WHERE e.salary > dept_avg.avg_salary;

14. modify the column length sotring capcity
 ALTER TABLE table_name MODIFY column_name varchar(255);

15.write sql query to rank employee based on salary?
select employee_id,employee_name,salary,RANK() OVER(ORDER BY salary DESC) AS salaryRank From employee;

16.SQL Query to Update DEPARTMENT_NAME and POST_HOLD of the 1000th Employee in MySQL
UPDATE employees
SET department_name = 'New Department',
    post_hold = 'New Post'
WHERE employee_id = (
    SELECT employee_id FROM (
        SELECT employee_id FROM employees
        ORDER BY employee_id **ASC**
        LIMIT 1 OFFSET 999
    ) AS temp
);

17.SQL Query to Add a New Column
Alter tabl_name Add column colunm_anem varchar(300);

